{'TMP': 'C:\\Users\\RP\\AppData\\Local\\Temp', 'GOPATH': 'D:\\DV\\Personal\\SunnyBake', 'COMPUTERNAME': 'DV-PC', 'VS140COMNTOOLS': 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools\\', 'MOD_PATH': 'C:\\Program Files (x86)\\Silverfrost\\FTN95\\include', 'USERDOMAIN': 'DV-PC', 'VS100COMNTOOLS': 'C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\Common7\\Tools\\', 'WINDOWS_LOGIN': '0', 'PSMODULEPATH': 'C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\;c:\\Program Files (x86)\\Microsoft SQL Server\\110\\Tools\\PowerShell\\Modules\\', 'COMMONPROGRAMFILES': 'C:\\Program Files\\Common Files', 'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 26 Stepping 5, GenuineIntel', 'VBOX_MSI_INSTALL_PATH': 'C:\\Program Files\\Oracle\\VirtualBox\\', 'PROGRAMFILES': 'C:\\Program Files', 'PROCESSOR_REVISION': '1a05', 'PATH': 'C:\\Program Files\\Anaconda2\\Library\\bin;C:\\Program Files (x86)\\Silverfrost\\FTN95;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Microsoft SQL Server\\100\\Tools\\Binn\\VSShell\\Common7\\IDE\\;C:\\Program Files (x86)\\Microsoft SQL Server\\100\\Tools\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\100\\Tools\\Binn\\;C:\\Program Files (x86)\\Microsoft Visual Studio 9.0\\Common7\\IDE\\PrivateAssemblies\\;C:\\Program Files (x86)\\Microsoft SQL Server\\100\\DTS\\Binn\\;c:\\Program Files\\Microsoft SQL Server\\100\\DTS\\Binn\\;C:\\xampp\\php;C:\\ProgramData\\ComposerSetup\\bin;%USERPROFILE%\\.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\;C:\\Program Files\\Microsoft SQL Server\\110\\Tools\\Binn\\;c:\\Program Files (x86)\\Microsoft SQL Server\\110\\Tools\\Binn\\;c:\\Program Files\\Microsoft SQL Server\\110\\DTS\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\120\\Tools\\Binn\\;C:\\Program Files\\MATLAB\\R2016a\\runtime\\win64;C:\\Program Files\\MATLAB\\R2016a\\bin;C:\\Program Files\\MATLAB\\R2016a\\polyspace\\bin;C:\\Program Files\\Anaconda2;C:\\Program Files\\Anaconda2\\Scripts;C:\\Program Files\\Anaconda2\\Library\\bin;C:\\Program Files (x86)\\Brackets\\command;C:\\Program Files\\nodejs\\;C:\\Go\\bin;C:\\Users\\RP\\AppData\\Roaming\\npm;C:\\Go\\bin;C:\\Users\\RP\\AppData\\Local\\Programs\\Python\\Python36;C:\\Program Files (x86)\\Google\\Chrome\\Application;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Microsoft SQL Server\\100\\Tools\\Binn\\VSShell\\Common7\\IDE\\;C:\\Program Files (x86)\\Microsoft SQL Server\\100\\Tools\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\100\\Tools\\Binn\\;C:\\Program Files (x86)\\Microsoft Visual Studio 9.0\\Common7\\IDE\\PrivateAssemblies\\;C:\\Program Files (x86)\\Microsoft SQL Server\\100\\DTS\\Binn\\;c:\\Program Files\\Microsoft SQL Server\\100\\DTS\\Binn\\;C:\\xampp\\php;C:\\ProgramData\\ComposerSetup\\bin;C:\\Users\\RP\\AppData\\Local\\Programs\\Git\\cmd;C:\\Program Files\\Java\\jdk1.6.0_24\\bin;C:\\Python27\\python.exe;C:\\MinGW\\bin;C:\\Program Files\\Microsoft VS Code\\bin;;C:\\Program Files\\Anaconda2\\lib\\site-packages\\pywin32_system32', 'SYSTEMROOT': 'C:\\Windows', 'PORT': '8081', 'COMSPEC': 'C:\\Windows\\system32\\cmd.exe', 'TEMP': 'C:\\Windows\\TEMP', 'ALLUSERSPROFILE': 'C:\\ProgramData', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'PROCESSOR_ARCHITECTURE': 'AMD64', 'NWUSERNAME': 'DV', 'GOROOT': 'C:\\Go\\', 'LOCALAPPDATA': 'C:\\Users\\RP\\AppData\\Local', 'HOMEPATH': '\\Users\\RP', 'NWLANGUAGE': 'ENGLISH', 'PROGRAMW6432': 'C:\\Program Files', 'USERNAME': 'DV', 'LOGONSERVER': '\\\\DV-PC', 'PROMPT': '$P$G', 'SESSIONNAME': 'Console', 'PROGRAMDATA': 'C:\\ProgramData', 'ONEDRIVE': 'C:\\Users\\RP\\OneDrive', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC', 'ASL.LOG': 'Destination=file', 'JD2_HOME': 'C:\\Users\\RP\\AppData\\Local\\JDownloader v2.0', 'FP_NO_HOST_CHECK': 'NO', 'WINDIR': 'C:\\Windows', 'APPDATA': 'C:\\Users\\RP\\AppData\\Roaming', 'HOMEDRIVE': 'C:', 'SYSTEMDRIVE': 'C:', 'HTTP_PROXY': 'http://rp:tarsisius@10.22.64.21:8888', 'NUMBER_OF_PROCESSORS': '8', 'HTTPS_PROXY': 'http://rp:tarsisius@10.22.64.21:8888', 'PROCESSOR_LEVEL': '6', 'PROGRAMFILES(X86)': 'C:\\Program Files (x86)', 'F95INCLUDE': 'C:\\Program Files (x86)\\Silverfrost\\FTN95\\include', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', 'OS': 'Windows_NT', 'PUBLIC': 'C:\\Users\\Public', 'USERPROFILE': 'C:\\Users\\RP'}